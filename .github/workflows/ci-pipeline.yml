name: Aegis CI Pipeline

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    defaults:
      run:
        working-directory: ./aegis_dataops_pipeline

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}


      - name: Cache Pip Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Lint with Ruff
        run: ruff check .

      - name: Run Unit Tests with Coverage
        run: pytest --cov=aegis --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
            token: ${{ secrets.CODECOV_TOKEN }}

      - name: Generate Test Data
        run: |
          export NUM_RECORDS=10000
          python scripts/generate_data.py

      - name: Run PySpark Pipeline (Integration Test)
        run: |
          python aegis/pipeline.py

      # --- NEW ARTIFACT UPLOAD STEP ---
      - name: Upload Run Artifacts
        # This action runs 'always()', so even if a previous step fails,
        # it will try to upload the reports for debugging.
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: |
            run_summary.json
            coverage.xml
  security-scan:
    name: Security Scan (Trufflehog)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for a deep scan

      - name: Run Trufflehog secret scanner
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          extra_args: --debug
